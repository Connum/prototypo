M 	{{ width * 64 }} 0
L 	{{ self[1].x }} {{ self[5].y - thickness * (66/80) * contrast }}
L 	0 {{ self[2].y }}
L 	0 {{ xHeight * (419/465) * crossbar }}
L 	{{ self[1].x }} {{ self[4].y }}
L 	{{ self[5].x }} {{ self[5].y + ( self[7].y - self[5].y ) *  (61/232) }}  /// ascenderHeight should be xHeight * ascender ?
rC 	{{ [ self[6].x + ( self[8].x - self[6].x ) * (159/219) , ascenderHeight * (651/720) ] |curve:"both":"top-right":self[6]:roundness }}
rC 	{{ [ self[11].x + width * 139 , ascenderHeight * (640/720) ] |curve:"reverse":"top-left":self[7]:roundness:0.5 }}  /// place points with previous ones
L 	{{ self[8].x - thickness * (6/80) * contrast }} {{ $result = ( self[10].y - thickness * (3/80) * contrast ) > ( self[8].y - thickness * (60/80) * contrast ) ? self[8].y - thickness * (60/80) * contrast : self[10].y - thickness * (3/80) * contrast }}
rC 	{{ [ self[7].x , self[7].y - thickness * (68/80) * contrast ] |curve:"reverse":"top-right":self[9]:roundness:-0.5 }}
rC 	{{ [ self[5].x + thickness , self[12].y + ( self[10].y - self[12].y ) *  (61/232) ] |curve:"both":"top-left":self[10]:roundness }}
L 	{{ self[11].x }} {{ self[5].y }}
L 	{{ self[12].x + width * 93 }} {{ self[12].y }}
L 	{{ self[13].x }} {{ self[2].y }}
L 	{{ self[12].x }} {{ self[14].y }}
L 	{{ self[15].x }} 0
L 	{{ self[1].x }} {{ self[1].y }}
Z